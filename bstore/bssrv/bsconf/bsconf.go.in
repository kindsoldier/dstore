package bsconf

import (
    "path/filepath"
    "os"
    "io/fs"
    "github.com/go-yaml/yaml"
)


const configName    string = "@srv_name@.conf"
const configDir     string = "@srv_confdir@"

type Config struct {
    Port        string      `json:"port"    yaml:"port"`
    ConfDir     string      `json:"confdir" yaml:"confdir"`
    DataDir     string      `json:"datadir" yaml:"datadir"`
    LogDir      string      `json:"logdir"  yaml:"logdir"`
    RunDir      string      `json:"rundir"  yaml:"rundir"`

    ConfPath    string      `json:"-"       yaml:"-"`

    AccName     string      `json:"-"       yaml:"-"`
    MsgName     string      `json:"-"       yaml:"-"`
    PidName     string      `json:"-"       yaml:"-"`

    FilePerm    fs.FileMode `json:"-"       yaml:"-"`
    DirPerm     fs.FileMode `json:"-"       yaml:"-"`
}

func NewConfig() *Config {
    var config Config
    config.RunDir   = "@srv_rundir@"
    config.LogDir   = "@srv_logdir@"
    config.DataDir  = "@srv_datadir@"
    config.ConfDir  = "@srv_confdir@"
    config.Port     = "@srv_port@"

    config.PidName  = "@srv_name@.pid"
    config.MsgName  = "message.log"
    config.AccName  = "access.log"

    config.FilePerm = 0655
    config.DirPerm  = 0755

    config.ConfPath = filepath.Join(configDir, configName)

    return &config
}

func (config *Config) Read() error {
    var err error
    confData, err := os.ReadFile(config.ConfPath)
    err = yaml.Unmarshal(confData, config)
    if err != nil {
        return err
    }
    return err
}
